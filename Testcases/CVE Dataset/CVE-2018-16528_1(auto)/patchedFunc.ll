; ModuleID = '/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2018-16528_1(auto)/patchedFunc.c'
source_filename = "/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2018-16528_1(auto)/patchedFunc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@dval = dso_local global i64 0, align 8, !dbg !0

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @map_save_val(i8* %mp, i64 %key, i64 %val) #0 !dbg !20 {
entry:
  %mp.addr = alloca i8*, align 8
  %key.addr = alloca i64, align 8
  %val.addr = alloca i64, align 8
  store i8* %mp, i8** %mp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mp.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i64 %key, i64* %key.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %key.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !27, metadata !DIExpression()), !dbg !28
  %0 = load i8*, i8** %mp.addr, align 8, !dbg !29
  %cmp = icmp eq i8* %0, null, !dbg !31
  br i1 %cmp, label %if.then, label %if.end, !dbg !32

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !33

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %val.addr, align 8, !dbg !35
  store i64 %1, i64* @dval, align 8, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prvSetupConnection() #0 !dbg !38 {
entry:
  %key = alloca i32, align 4
  %xStatus = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %key, metadata !41, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.declare(metadata i32* %xStatus, metadata !44, metadata !DIExpression()), !dbg !45
  %0 = load i32, i32* %key, align 4, !dbg !46
  %conv = sext i32 %0 to i64, !dbg !46
  %1 = load i32, i32* %xStatus, align 4, !dbg !47
  %conv1 = sext i32 %1 to i64, !dbg !47
  call void @map_save_val(i8* null, i64 %conv, i64 %conv1), !dbg !48
  ret void, !dbg !49
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!14, !15, !16, !17, !18}
!llvm.ident = !{!19}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dval", scope: !2, file: !8, line: 8, type: !9, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !7, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2018-16528_1(auto)/patchedFunc.c", directory: "/home/mohsen/AutoPatch/Scripts")
!4 = !{}
!5 = !{!6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !{!0}
!8 = !DIFile(filename: "Testcases/CVE-Lists/CVE-2018-16528_1(auto)/patchedFunc.c", directory: "/home/mohsen/AutoPatch")
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !10, line: 27, baseType: !11)
!10 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !12, line: 45, baseType: !13)
!12 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!13 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!14 = !{i32 7, !"Dwarf Version", i32 4}
!15 = !{i32 2, !"Debug Info Version", i32 3}
!16 = !{i32 1, !"wchar_size", i32 4}
!17 = !{i32 7, !"uwtable", i32 1}
!18 = !{i32 7, !"frame-pointer", i32 2}
!19 = !{!"clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)"}
!20 = distinct !DISubprogram(name: "map_save_val", scope: !8, file: !8, line: 10, type: !21, scopeLine: 10, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!21 = !DISubroutineType(types: !22)
!22 = !{null, !6, !9, !9}
!23 = !DILocalVariable(name: "mp", arg: 1, scope: !20, file: !8, line: 10, type: !6)
!24 = !DILocation(line: 10, column: 25, scope: !20)
!25 = !DILocalVariable(name: "key", arg: 2, scope: !20, file: !8, line: 10, type: !9)
!26 = !DILocation(line: 10, column: 38, scope: !20)
!27 = !DILocalVariable(name: "val", arg: 3, scope: !20, file: !8, line: 10, type: !9)
!28 = !DILocation(line: 10, column: 52, scope: !20)
!29 = !DILocation(line: 11, column: 6, scope: !30)
!30 = distinct !DILexicalBlock(scope: !20, file: !8, line: 11, column: 6)
!31 = !DILocation(line: 11, column: 9, scope: !30)
!32 = !DILocation(line: 11, column: 6, scope: !20)
!33 = !DILocation(line: 12, column: 2, scope: !34)
!34 = distinct !DILexicalBlock(scope: !30, file: !8, line: 11, column: 18)
!35 = !DILocation(line: 13, column: 9, scope: !20)
!36 = !DILocation(line: 13, column: 7, scope: !20)
!37 = !DILocation(line: 14, column: 1, scope: !20)
!38 = distinct !DISubprogram(name: "prvSetupConnection", scope: !8, file: !8, line: 16, type: !39, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!39 = !DISubroutineType(types: !40)
!40 = !{null}
!41 = !DILocalVariable(name: "key", scope: !38, file: !8, line: 19, type: !42)
!42 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!43 = !DILocation(line: 19, column: 6, scope: !38)
!44 = !DILocalVariable(name: "xStatus", scope: !38, file: !8, line: 20, type: !42)
!45 = !DILocation(line: 20, column: 6, scope: !38)
!46 = !DILocation(line: 21, column: 27, scope: !38)
!47 = !DILocation(line: 21, column: 31, scope: !38)
!48 = !DILocation(line: 21, column: 2, scope: !38)
!49 = !DILocation(line: 23, column: 1, scope: !38)
