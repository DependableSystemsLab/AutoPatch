; ModuleID = '~/AutoPatch/Testcases/CVE-Lists/CVE-2020-10028(auto)/patchedFunc.c'
source_filename = "~/AutoPatch/Testcases/CVE-Lists/CVE-2020-10028(auto)/patchedFunc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @z_vrfy_kscan_enable_callback() #0 !dbg !16 {
entry:
  %retval = alloca i32, align 4
  %gpio_driver_api_ptr_addr = alloca i32*, align 8
  %gpio_driver_api_ptr = alloca i32*, align 8
  %gpio_enable_callback_ptr_addr = alloca i32*, align 8
  %gpio_enable_callback_ptr = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %gpio_driver_api_ptr_addr, metadata !21, metadata !DIExpression()), !dbg !22
  call void @llvm.dbg.declare(metadata i32** %gpio_driver_api_ptr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32*, i32** %gpio_driver_api_ptr_addr, align 8, !dbg !25
  %1 = load i32, i32* %0, align 4, !dbg !26
  %conv = zext i32 %1 to i64, !dbg !27
  %2 = inttoptr i64 %conv to i32*, !dbg !27
  store i32* %2, i32** %gpio_driver_api_ptr, align 8, !dbg !24
  call void @llvm.dbg.declare(metadata i32** %gpio_enable_callback_ptr_addr, metadata !28, metadata !DIExpression()), !dbg !29
  %3 = load i32*, i32** %gpio_driver_api_ptr, align 8, !dbg !30
  %add.ptr = getelementptr inbounds i32, i32* %3, i64 4, !dbg !31
  store i32* %add.ptr, i32** %gpio_enable_callback_ptr_addr, align 8, !dbg !29
  call void @llvm.dbg.declare(metadata i32** %gpio_enable_callback_ptr, metadata !32, metadata !DIExpression()), !dbg !33
  %4 = load i32*, i32** %gpio_driver_api_ptr, align 8, !dbg !34
  %5 = load i32, i32* %4, align 4, !dbg !35
  %conv1 = zext i32 %5 to i64, !dbg !36
  %6 = inttoptr i64 %conv1 to i32*, !dbg !36
  store i32* %6, i32** %gpio_enable_callback_ptr, align 8, !dbg !33
  %7 = load i32*, i32** %gpio_enable_callback_ptr, align 8, !dbg !37
  %8 = load i32, i32* %7, align 4, !dbg !39
  %cmp = icmp eq i32 %8, 0, !dbg !40
  br i1 %cmp, label %if.then, label %if.end, !dbg !41

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !42
  br label %return, !dbg !42

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !44
  br label %return, !dbg !44

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !45
  ret i32 %9, !dbg !45
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!10, !11, !12, !13, !14}
!llvm.ident = !{!15}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "~/AutoPatch/Testcases/CVE-Lists/CVE-2020-10028(auto)/patchedFunc.c", directory: "~/AutoPatch/Scripts")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !6, line: 26, baseType: !7)
!6 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !8, line: 42, baseType: !9)
!8 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!9 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!10 = !{i32 7, !"Dwarf Version", i32 4}
!11 = !{i32 2, !"Debug Info Version", i32 3}
!12 = !{i32 1, !"wchar_size", i32 4}
!13 = !{i32 7, !"uwtable", i32 1}
!14 = !{i32 7, !"frame-pointer", i32 2}
!15 = !{!"clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)"}
!16 = distinct !DISubprogram(name: "z_vrfy_kscan_enable_callback", scope: !17, file: !17, line: 8, type: !18, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!17 = !DIFile(filename: "Testcases/CVE-Lists/CVE-2020-10028(auto)/patchedFunc.c", directory: "~/AutoPatch")
!18 = !DISubroutineType(types: !19)
!19 = !{!20}
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !DILocalVariable(name: "gpio_driver_api_ptr_addr", scope: !16, file: !17, line: 11, type: !4)
!22 = !DILocation(line: 11, column: 12, scope: !16)
!23 = !DILocalVariable(name: "gpio_driver_api_ptr", scope: !16, file: !17, line: 12, type: !4)
!24 = !DILocation(line: 12, column: 16, scope: !16)
!25 = !DILocation(line: 12, column: 52, scope: !16)
!26 = !DILocation(line: 12, column: 51, scope: !16)
!27 = !DILocation(line: 12, column: 38, scope: !16)
!28 = !DILocalVariable(name: "gpio_enable_callback_ptr_addr", scope: !16, file: !17, line: 13, type: !4)
!29 = !DILocation(line: 13, column: 16, scope: !16)
!30 = !DILocation(line: 13, column: 48, scope: !16)
!31 = !DILocation(line: 13, column: 68, scope: !16)
!32 = !DILocalVariable(name: "gpio_enable_callback_ptr", scope: !16, file: !17, line: 14, type: !4)
!33 = !DILocation(line: 14, column: 16, scope: !16)
!34 = !DILocation(line: 14, column: 57, scope: !16)
!35 = !DILocation(line: 14, column: 56, scope: !16)
!36 = !DILocation(line: 14, column: 43, scope: !16)
!37 = !DILocation(line: 17, column: 7, scope: !38)
!38 = distinct !DILexicalBlock(scope: !16, file: !17, line: 17, column: 6)
!39 = !DILocation(line: 17, column: 6, scope: !38)
!40 = !DILocation(line: 17, column: 32, scope: !38)
!41 = !DILocation(line: 17, column: 6, scope: !16)
!42 = !DILocation(line: 18, column: 10, scope: !43)
!43 = distinct !DILexicalBlock(scope: !38, file: !17, line: 17, column: 38)
!44 = !DILocation(line: 20, column: 6, scope: !16)
!45 = !DILocation(line: 21, column: 1, scope: !16)
