; ModuleID = '/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2020-10063(auto)/patchedFunc.ll'
source_filename = "/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2020-10063(auto)/patchedFunc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @parse_Option(i16* %opt_len) #0 !dbg !9 {
entry:
  %retval = alloca i32, align 4
  %opt_len.addr = alloca i16*, align 8
  %delta = alloca i16, align 2
  %r = alloca i32, align 4
  %hdr_len = alloca i16, align 2
  %len = alloca i32, align 4
  call void @TRAMPOLINE_FUNCTION()
  store i16* %opt_len, i16** %opt_len.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %opt_len.addr, metadata !20, metadata !DIExpression()), !dbg !21
  call void @llvm.dbg.declare(metadata i16* %delta, metadata !22, metadata !DIExpression()), !dbg !23
  call void @llvm.dbg.declare(metadata i32* %r, metadata !24, metadata !DIExpression()), !dbg !25
  call void @llvm.dbg.declare(metadata i16* %hdr_len, metadata !26, metadata !DIExpression()), !dbg !27
  call void @llvm.dbg.declare(metadata i32* %len, metadata !28, metadata !DIExpression()), !dbg !32
  %0 = load i16, i16* %delta, align 2, !dbg !33
  %conv = zext i16 %0 to i32, !dbg !33
  %cmp = icmp sgt i32 %conv, 12, !dbg !35
  br i1 %cmp, label %if.then, label %if.end17, !dbg !36

if.then:                                          ; preds = %entry
  call void @TRAMPOLINE_FUNCTION(), !dbg !37
  %1 = load i32, i32* %r, align 4, !dbg !37
  %cmp2 = icmp slt i32 %1, 0, !dbg !40
  br i1 %cmp2, label %if.then8, label %lor.lhs.false, !dbg !41

lor.lhs.false:                                    ; preds = %if.then
  %2 = load i32, i32* %r, align 4, !dbg !42
  %cmp4 = icmp eq i32 %2, 0, !dbg !43
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !44

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load i32, i32* %len, align 4, !dbg !45
  %cmp6 = icmp ugt i32 %3, 12, !dbg !46
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !47

if.then8:                                         ; preds = %land.lhs.true, %if.then
  call void @TRAMPOLINE_FUNCTION(), !dbg !48
  store i32 -22, i32* %retval, align 4, !dbg !48
  br label %if.end17, !dbg !48

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  call void @TRAMPOLINE_FUNCTION(), !dbg !50
  %4 = load i16, i16* %hdr_len, align 2, !dbg !50
  %conv9 = zext i16 %4 to i32, !dbg !50
  %5 = load i16*, i16** %opt_len.addr, align 8, !dbg !51
  %6 = load i16, i16* %5, align 2, !dbg !52
  %conv10 = zext i16 %6 to i32, !dbg !52
  %add = add nsw i32 %conv10, %conv9, !dbg !52
  %conv11 = trunc i32 %add to i16, !dbg !52
  store i16 %conv11, i16* %5, align 2, !dbg !52
  %7 = load i32, i32* %len, align 4, !dbg !53
  %add12 = add i32 %7, 4095, !dbg !55
  %cmp13 = icmp uge i32 %add12, 65535, !dbg !56
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !57

if.then15:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !58
  br label %if.end17, !dbg !58

if.end16:                                         ; preds = %if.end
  call void @TRAMPOLINE_FUNCTION(), !dbg !60
  br label %if.end17, !dbg !60

if.end17:                                         ; preds = %if.end16, %if.then15, %if.then8, %entry
  call void @TRAMPOLINE_FUNCTION(), !dbg !61
  %8 = load i32, i32* %retval, align 4, !dbg !61
  ret i32 %8, !dbg !61
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @TRAMPOLINE_FUNCTION()

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2020-10063(auto)/patchedFunc.c", directory: "/home/mohsen/AutoPatch/Scripts")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{i32 7, !"uwtable", i32 1}
!7 = !{i32 7, !"frame-pointer", i32 2}
!8 = !{!"clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)"}
!9 = distinct !DISubprogram(name: "parse_Option", scope: !10, file: !10, line: 23, type: !11, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!10 = !DIFile(filename: "Testcases/CVE-Lists/CVE-2020-10063(auto)/patchedFunc.c", directory: "/home/mohsen/AutoPatch")
!11 = !DISubroutineType(types: !12)
!12 = !{!13, !14}
!13 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !16, line: 25, baseType: !17)
!16 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !18, line: 40, baseType: !19)
!18 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!19 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!20 = !DILocalVariable(name: "opt_len", arg: 1, scope: !9, file: !10, line: 23, type: !14)
!21 = !DILocation(line: 23, column: 28, scope: !9)
!22 = !DILocalVariable(name: "delta", scope: !9, file: !10, line: 25, type: !15)
!23 = !DILocation(line: 25, column: 12, scope: !9)
!24 = !DILocalVariable(name: "r", scope: !9, file: !10, line: 26, type: !13)
!25 = !DILocation(line: 26, column: 7, scope: !9)
!26 = !DILocalVariable(name: "hdr_len", scope: !9, file: !10, line: 28, type: !15)
!27 = !DILocation(line: 28, column: 12, scope: !9)
!28 = !DILocalVariable(name: "len", scope: !9, file: !10, line: 30, type: !29)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !16, line: 26, baseType: !30)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !18, line: 42, baseType: !31)
!31 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!32 = !DILocation(line: 30, column: 12, scope: !9)
!33 = !DILocation(line: 33, column: 7, scope: !34)
!34 = distinct !DILexicalBlock(scope: !9, file: !10, line: 33, column: 7)
!35 = !DILocation(line: 33, column: 13, scope: !34)
!36 = !DILocation(line: 33, column: 7, scope: !9)
!37 = !DILocation(line: 38, column: 8, scope: !38)
!38 = distinct !DILexicalBlock(scope: !39, file: !10, line: 38, column: 7)
!39 = distinct !DILexicalBlock(scope: !34, file: !10, line: 33, column: 35)
!40 = !DILocation(line: 38, column: 10, scope: !38)
!41 = !DILocation(line: 38, column: 15, scope: !38)
!42 = !DILocation(line: 38, column: 19, scope: !38)
!43 = !DILocation(line: 38, column: 21, scope: !38)
!44 = !DILocation(line: 38, column: 26, scope: !38)
!45 = !DILocation(line: 38, column: 29, scope: !38)
!46 = !DILocation(line: 38, column: 33, scope: !38)
!47 = !DILocation(line: 38, column: 7, scope: !39)
!48 = !DILocation(line: 39, column: 4, scope: !49)
!49 = distinct !DILexicalBlock(scope: !38, file: !10, line: 38, column: 56)
!50 = !DILocation(line: 41, column: 15, scope: !39)
!51 = !DILocation(line: 41, column: 4, scope: !39)
!52 = !DILocation(line: 41, column: 12, scope: !39)
!53 = !DILocation(line: 48, column: 6, scope: !54)
!54 = distinct !DILexicalBlock(scope: !39, file: !10, line: 48, column: 6)
!55 = !DILocation(line: 48, column: 10, scope: !54)
!56 = !DILocation(line: 48, column: 18, scope: !54)
!57 = !DILocation(line: 48, column: 6, scope: !39)
!58 = !DILocation(line: 49, column: 4, scope: !59)
!59 = distinct !DILexicalBlock(scope: !54, file: !10, line: 48, column: 28)
!60 = !DILocation(line: 51, column: 2, scope: !39)
!61 = !DILocation(line: 52, column: 1, scope: !9)
