; ModuleID = '/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2018-16528_2(auto)/patchedFunc.c'
source_filename = "/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2018-16528_2(auto)/patchedFunc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@dval = dso_local global i64 0, align 8, !dbg !0

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @map_get_val(i8* %mp, i64 %key) #0 !dbg !18 {
entry:
  %mp.addr = alloca i8*, align 8
  %key.addr = alloca i64, align 8
  store i8* %mp, i8** %mp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mp.addr, metadata !22, metadata !DIExpression()), !dbg !23
  store i64 %key, i64* %key.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %key.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load i64, i64* @dval, align 8, !dbg !26
  ret i64 %0, !dbg !27
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @prvSetupConnection() #0 !dbg !28 {
entry:
  %retval = alloca i32, align 4
  %key = alloca i32, align 4
  %val = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %key, metadata !32, metadata !DIExpression()), !dbg !33
  call void @llvm.dbg.declare(metadata i32* %val, metadata !34, metadata !DIExpression()), !dbg !35
  %0 = load i32, i32* %key, align 4, !dbg !36
  %conv = sext i32 %0 to i64, !dbg !36
  %call = call i64 @map_get_val(i8* null, i64 %conv), !dbg !37
  %conv1 = trunc i64 %call to i32, !dbg !37
  store i32 %conv1, i32* %val, align 4, !dbg !35
  %1 = load i32, i32* %val, align 4, !dbg !38
  %cmp = icmp eq i32 %1, 0, !dbg !40
  br i1 %cmp, label %if.then, label %if.end, !dbg !41

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !42
  br label %return, !dbg !42

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !44
  br label %return, !dbg !44

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !45
  ret i32 %2, !dbg !45
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!12, !13, !14, !15, !16}
!llvm.ident = !{!17}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dval", scope: !2, file: !6, line: 8, type: !7, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !5, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mohsen/AutoPatch/Testcases/CVE-Lists/CVE-2018-16528_2(auto)/patchedFunc.c", directory: "/home/mohsen/AutoPatch/Scripts")
!4 = !{}
!5 = !{!0}
!6 = !DIFile(filename: "Testcases/CVE-Lists/CVE-2018-16528_2(auto)/patchedFunc.c", directory: "/home/mohsen/AutoPatch")
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !8, line: 27, baseType: !9)
!8 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !10, line: 45, baseType: !11)
!10 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!11 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!12 = !{i32 7, !"Dwarf Version", i32 4}
!13 = !{i32 2, !"Debug Info Version", i32 3}
!14 = !{i32 1, !"wchar_size", i32 4}
!15 = !{i32 7, !"uwtable", i32 1}
!16 = !{i32 7, !"frame-pointer", i32 2}
!17 = !{!"clang version 13.0.1 (https://github.com/llvm/llvm-project.git 75e33f71c2dae584b13a7d1186ae0a038ba98838)"}
!18 = distinct !DISubprogram(name: "map_get_val", scope: !6, file: !6, line: 10, type: !19, scopeLine: 10, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!19 = !DISubroutineType(types: !20)
!20 = !{!7, !21, !7}
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!22 = !DILocalVariable(name: "mp", arg: 1, scope: !18, file: !6, line: 10, type: !21)
!23 = !DILocation(line: 10, column: 28, scope: !18)
!24 = !DILocalVariable(name: "key", arg: 2, scope: !18, file: !6, line: 10, type: !7)
!25 = !DILocation(line: 10, column: 41, scope: !18)
!26 = !DILocation(line: 11, column: 9, scope: !18)
!27 = !DILocation(line: 11, column: 2, scope: !18)
!28 = distinct !DISubprogram(name: "prvSetupConnection", scope: !6, file: !6, line: 14, type: !29, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!29 = !DISubroutineType(types: !30)
!30 = !{!31}
!31 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!32 = !DILocalVariable(name: "key", scope: !28, file: !6, line: 17, type: !31)
!33 = !DILocation(line: 17, column: 6, scope: !28)
!34 = !DILocalVariable(name: "val", scope: !28, file: !6, line: 18, type: !31)
!35 = !DILocation(line: 18, column: 6, scope: !28)
!36 = !DILocation(line: 18, column: 37, scope: !28)
!37 = !DILocation(line: 18, column: 12, scope: !28)
!38 = !DILocation(line: 20, column: 6, scope: !39)
!39 = distinct !DILexicalBlock(scope: !28, file: !6, line: 20, column: 6)
!40 = !DILocation(line: 20, column: 10, scope: !39)
!41 = !DILocation(line: 20, column: 6, scope: !28)
!42 = !DILocation(line: 21, column: 10, scope: !43)
!43 = distinct !DILexicalBlock(scope: !39, file: !6, line: 20, column: 16)
!44 = !DILocation(line: 23, column: 6, scope: !28)
!45 = !DILocation(line: 24, column: 1, scope: !28)
